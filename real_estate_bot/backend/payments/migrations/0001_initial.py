# Generated by Django 4.2.7 on 2025-07-14 12:05

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('real_estate', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_method', models.CharField(choices=[('click', 'Click'), ('payme', 'Payme')], max_length=10)),
                ('service_type', models.CharField(choices=[('premium', 'Premium объявление'), ('ads', 'Реклама'), ('top_up', 'Пополнение баланса')], max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Ожидание'), ('completed', 'Завершено'), ('failed', 'Неудачно'), ('cancelled', 'Отменено')], default='pending', max_length=20)),
                ('transaction_id', models.CharField(blank=True, max_length=100, null=True)),
                ('external_id', models.CharField(blank=True, max_length=100, null=True)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('property', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='real_estate.property')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='real_estate.telegramuser')),
            ],
            options={
                'verbose_name': 'Payment',
                'verbose_name_plural': 'Payments',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PaymeTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payme_id', models.CharField(max_length=255, unique=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('state', models.IntegerField()),
                ('create_time', models.BigIntegerField()),
                ('perform_time', models.BigIntegerField(blank=True, null=True)),
                ('cancel_time', models.BigIntegerField(blank=True, null=True)),
                ('reason', models.IntegerField(blank=True, null=True)),
                ('payment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='payments.payment')),
            ],
            options={
                'verbose_name': 'Payme Transaction',
                'verbose_name_plural': 'Payme Transactions',
            },
        ),
        migrations.CreateModel(
            name='ClickTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('click_trans_id', models.CharField(max_length=100)),
                ('merchant_trans_id', models.CharField(max_length=100)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('action', models.CharField(max_length=20)),
                ('error', models.IntegerField(default=0)),
                ('error_note', models.CharField(blank=True, max_length=200)),
                ('sign_time', models.CharField(max_length=20)),
                ('sign_string', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('payment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='payments.payment')),
            ],
            options={
                'verbose_name': 'Click Transaction',
                'verbose_name_plural': 'Click Transactions',
            },
        ),
    ]
